{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/time.js","webpack:///./src/utils.js","webpack:///./src/spriteSelector.js","webpack:///./src/spriteMethods.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","secondsTimer","document","getElementById","minutesTimer","hourTimer","timer","startTimer","seconds","innerHTML","minutes","hours","setInterval","isTimerPaused","restartTimer","clearInterval","pause","loop","stop","checkInp","isNaN","alert","changeEventHandler","event","target","this","id","amountToSpawn","parseInt","gSize","gSpeed","gFertilityRate","gFertilityProgress","gTotalHunger","gHealth","gDamage","gDefence","gSight","gStealth","getRandomInt","min","max","Math","ceil","floor","random","setError","message","errorText","removeAttribute","isCollide","a","b","y","height","x","width","window","togglePause","isStopped","start","selectedSpriteInfo","clearSelectedSpriteAndInterval","sprite","interval","displaySpriteProps","listOfSprites","createElement","shownProps","entries","map","prop","length","li","liContent","createTextNode","appendChild","spriteUniqueId","moveSpriteTowardsTarget","position","_x","velocity","_y","moveSpriteAwayFromTarget","createSprite","size","speed","fertilityRate","totalFertilityProgress","totalHunger","health","damage","defence","sight","stealth","kontra","selected","color","ttl","Infinity","dx","dy","isFertile","fertilityProgress","hunger","totalHealth","diseased","isColliding","onUp","sprites","forEach","otherSprite","push","pointer","track","breed","spriteA","spriteB","assign","randomMutation","infinityGauntlet","numberOfSpitesToCull","round","starve","src_errorText","sim","src_form","addEventListener","querySelector","onchange","startGame","setAttribute","init","spriteCount","restart","canvasSize","createSprites","gameLoop","[object Object]","update","canvas","spriteCanvasBoundaryChecker","spritePropsChecker","spriteSearchAndDestroy","j","collisionDetection","filter","isAlive","render","stopGame"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const secondsTimer = document.getElementById(\"seconds\");\r\nconst minutesTimer = document.getElementById(\"minutes\");\r\nconst hourTimer = document.getElementById(\"hours\");\r\nlet timer = null;\r\nwindow.isTimerPaused = false;\r\n\r\nfunction startTimer() {\r\n  let seconds = 0;\r\n  secondsTimer.innerHTML = 0;\r\n  let minutes = 0;\r\n  minutesTimer.innerHTML = 0;\r\n  let hours = 0;\r\n  hourTimer.innerHTML = 0;\r\n  timer = setInterval(() => {\r\n    if (!isTimerPaused) {\r\n      seconds += 1;\r\n      if (seconds === 60) {\r\n        minutes += 1;\r\n        seconds = 0;\r\n        minutesTimer.innerHTML = minutes;\r\n      }\r\n      if (minutes === 60) {\r\n        hours += 1;\r\n        minutes = 0;\r\n        hourTimer.innerHTML = hours;\r\n      }\r\n      secondsTimer.innerHTML = seconds;\r\n    }\r\n  }, 1000);\r\n}\r\n\r\nexport function restartTimer() {\r\n  if (timer) {\r\n    clearInterval(timer);\r\n    startTimer();\r\n  } else {\r\n    startTimer();\r\n  }\r\n}\r\n\r\nwindow.togglePause = function() {\r\n  if (loop.isStopped) {\r\n    loop.start();\r\n  } else {\r\n    loop.stop();\r\n  }\r\n  isTimerPaused = !isTimerPaused;\r\n};\r\n\r\nexport function pause() {\r\n  loop.stop();\r\n  isTimerPaused = true;\r\n}\r\n","function checkInp(value) {\r\n  if (isNaN(value)) {\r\n    alert(\"Input must be a number\");\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function changeEventHandler(event) {\r\n  // TODO: Add validation and sanitisation to entered values\r\n  if (!event.target.value) {\r\n    alert(\"All fields must have a value\");\r\n    if (this.id === \"amount\") {\r\n      event.target.value = amountToSpawn;\r\n    } else if (this.id === \"size\") {\r\n      event.target.value = gSize;\r\n    } else if (this.id === \"speed\") {\r\n      event.target.value = gSpeed;\r\n    } else if (this.id === \"fertilityRate\") {\r\n      event.target.value = gFertilityRate;\r\n    } else if (this.id === \"fertilityProgress\") {\r\n      event.target.value = gFertilityProgress;\r\n    } else if (this.id === \"totalHunger\") {\r\n      event.target.value = gTotalHunger;\r\n    } else if (this.id === \"health\") {\r\n      event.target.value = gHealth;\r\n    } else if (this.id === \"damage\") {\r\n      event.target.value = gDamage;\r\n    } else if (this.id === \"defence\") {\r\n      event.target.value = gDefence;\r\n    } else if (this.id === \"sight\") {\r\n      event.target.value = gSight;\r\n    } else if (this.id === \"stealth\") {\r\n      event.target.value = gStealth;\r\n    }\r\n  } else {\r\n    if (this.id === \"amount\") {\r\n      checkInp(event.target.value)\r\n        ? (amountToSpawn = parseInt(event.target.value, 10))\r\n        : (event.target.value = amountToSpawn);\r\n    } else if (this.id === \"size\") {\r\n      checkInp(event.target.value)\r\n        ? (gSize = parseInt(event.target.value, 10))\r\n        : (event.target.value = gSize);\r\n    } else if (this.id === \"speed\") {\r\n      checkInp(event.target.value)\r\n        ? (gSpeed = parseInt(event.target.value, 10))\r\n        : (event.target.value = gSpeed);\r\n    } else if (this.id === \"fertilityRate\") {\r\n      checkInp(event.target.value)\r\n        ? (gFertilityRate = parseInt(event.target.value, 10))\r\n        : (event.target.value = gFertilityRate);\r\n    } else if (this.id === \"fertilityProgress\") {\r\n      checkInp(event.target.value)\r\n        ? (gFertilityProgress = parseInt(event.target.value, 10))\r\n        : (event.target.value = gFertilityProgress);\r\n    } else if (this.id === \"totalHunger\") {\r\n      checkInp(event.target.value)\r\n        ? (gTotalHunger = parseInt(event.target.value, 10))\r\n        : (event.target.value = gTotalHunger);\r\n    } else if (this.id === \"health\") {\r\n      checkInp(event.target.value)\r\n        ? (gHealth = parseInt(event.target.value, 10))\r\n        : (event.target.value = gHealth);\r\n    } else if (this.id === \"damage\") {\r\n      checkInp(event.target.value)\r\n        ? (gDamage = parseInt(event.target.value, 10))\r\n        : (event.target.value = gDamage);\r\n    } else if (this.id === \"defence\") {\r\n      checkInp(event.target.value)\r\n        ? (gDefence = parseInt(event.target.value, 10))\r\n        : (event.target.value = gDefence);\r\n    } else if (this.id === \"sight\") {\r\n      checkInp(event.target.value)\r\n        ? (gSight = parseInt(event.target.value, 10))\r\n        : (event.target.value = gSight);\r\n    } else if (this.id === \"stealth\") {\r\n      checkInp(event.target.value)\r\n        ? (gStealth = parseInt(event.target.value, 10))\r\n        : (event.target.value = gStealth);\r\n    }\r\n  }\r\n}\r\n\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function setError(message) {\r\n  errorText.removeAttribute(\"style\");\r\n  errorText.innerHTML = message;\r\n}\r\n\r\nexport function isCollide(a, b) {\r\n  return !(\r\n    a.y + a.height < b.y ||\r\n    a.y > b.y + b.height ||\r\n    a.x + a.width < b.x ||\r\n    a.x > b.x + b.width\r\n  );\r\n}\r\n","const selectedSpriteInfo = document.getElementById(\"selectedSpriteInfo\");\r\n\r\nexport function clearSelectedSpriteAndInterval(sprite) {\r\n  selectedSpriteInfo.innerHTML = \"\";\r\n  clearInterval(sprite.interval);\r\n}\r\n\r\nfunction displaySpriteProps(sprite) {\r\n  selectedSpriteInfo.innerHTML = \"\";\r\n  let listOfSprites = document.createElement(\"ul\");\r\n  const shownProps = [\r\n    \"height\",\r\n    \"width\",\r\n    \"color\",\r\n    \"speed\",\r\n    \"isFertile\",\r\n    \"fertilityRate\",\r\n    \"fertilityProgress\",\r\n    \"hunger\",\r\n    \"totalHunger\",\r\n    \"health\",\r\n    \"totalHealth\",\r\n    \"damage\",\r\n    \"defence\",\r\n    \"sight\",\r\n    \"stealth\"\r\n  ];\r\n  Object.entries(sprite).map(prop => {\r\n    for (let i = 0; i < shownProps.length; i++) {\r\n      if (prop[0] === shownProps[i]) {\r\n        let li = document.createElement(\"li\");\r\n        let liContent = document.createTextNode(prop[0] + \": \" + prop[1]);\r\n        li.appendChild(liContent);\r\n        listOfSprites.appendChild(li);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n  selectedSpriteInfo.appendChild(listOfSprites);\r\n}\r\n\r\nexport function handleSpriteOnClick(sprite) {\r\n  sprites.forEach(otherSprite => {\r\n    if (sprite !== otherSprite) {\r\n      otherSprite.selected = \"false\";\r\n      clearInterval(otherSprite.interval);\r\n      otherSprite.color = \"red\";\r\n    }\r\n  });\r\n  if (sprite.selected !== \"true\") {\r\n    clearInterval(sprite);\r\n    sprite.color = \"green\";\r\n    sprite.selected = \"true\";\r\n    displaySpriteProps(sprite);\r\n    sprite.interval = setInterval(() => {\r\n      if (!isTimerPaused) {\r\n        displaySpriteProps(sprite);\r\n      }\r\n    }, 100);\r\n  }\r\n}\r\n","import { handleSpriteOnClick } from \"./spriteSelector\";\r\nimport { getRandomInt, isCollide } from \"./utils\";\r\nimport { clearSelectedSpriteAndInterval } from \"./spriteSelector\";\r\n\r\nlet spriteUniqueId = 1;\r\n\r\nexport function collisionDetection() {\r\n  for (let i = 0; i < sprites.length - 1; i++) {\r\n    for (let j = i + 1; j < sprites.length; j++) {\r\n      if (isCollide(sprites[i], sprites[j]) && sprites[i] !== sprites[j]) {\r\n        sprites[i].isColliding = true;\r\n        sprites[j].isColliding = true;\r\n        if (sprites[i].isFertile && sprites[j].isFertile) {\r\n          breed(sprites[i], sprites[j]);\r\n        } else {\r\n          feed(sprites[i], sprites[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function spriteCanvasBoundaryChecker(sprite) {\r\n  // sprite is beyond the left edge\r\n  if (sprite.x < 0) {\r\n    sprite.x = kontra.canvas.width;\r\n  }\r\n  // sprite is beyond the right edge\r\n  else if (sprite.x > kontra.canvas.width) {\r\n    sprite.x = 0;\r\n  }\r\n  // sprite is beyond the top edge\r\n  if (sprite.y < 0) {\r\n    sprite.y = kontra.canvas.height;\r\n  }\r\n  // sprite is beyond the bottom edge\r\n  else if (sprite.y > kontra.canvas.height) {\r\n    sprite.y = 0;\r\n  }\r\n}\r\n\r\nexport function spritePropsChecker(sprite) {\r\n  if (sprite.hunger >= sprite.totalHunger * 0.9) {\r\n    if (sprite.health < sprite.totalHealth) {\r\n      sprite.health += 1;\r\n    }\r\n  }\r\n  if (sprite.health <= 0) {\r\n    if (sprite.interval) {\r\n      clearSelectedSpriteAndInterval(sprite);\r\n    }\r\n    sprite.ttl = 0;\r\n  }\r\n  if (sprite.hunger <= 0) {\r\n    if (sprite.health > 0) {\r\n      sprite.health -= 1;\r\n    }\r\n  }\r\n  if (sprite.hunger > 0) {\r\n    sprite.hunger -= 1;\r\n  }\r\n  if (!sprite.isFertile) {\r\n    if (sprite.fertilityProgress < sprite.totalFertilityProgress) {\r\n      sprite.fertilityProgress += sprite.fertilityRate;\r\n    }\r\n    if (sprite.fertilityProgress >= sprite.totalFertilityProgress) {\r\n      sprite.isFertile = true;\r\n      sprite.fertilityProgress = 0;\r\n    }\r\n  }\r\n}\r\n\r\nfunction moveSpriteTowardsTarget(sprite, target) {\r\n  // If right, move left (negative)\r\n  if (sprite.position._x > target.position._x) {\r\n    if (sprite.velocity._x > 0) {\r\n      sprite.velocity._x *= -1;\r\n    }\r\n  } else {\r\n    if (sprite.velocity._x < 0) {\r\n      sprite.velocity._x *= -1;\r\n    }\r\n  }\r\n  // If below, move up (negative)\r\n  if (sprite.position._y > target.position._y) {\r\n    if (sprite.velocity._y > 0) {\r\n      sprite.velocity._y *= -1;\r\n    }\r\n  } else {\r\n    if (sprite.velocity._y < 0) {\r\n      sprite.velocity._y *= -1;\r\n    }\r\n  }\r\n}\r\n\r\nfunction moveSpriteAwayFromTarget(sprite, target) {\r\n  // If right, move right (positive)\r\n  if (sprite.position._x > target.position._x) {\r\n    if (sprite.velocity._x < 0) {\r\n      sprite.velocity._x *= -1;\r\n    }\r\n  } else {\r\n    if (sprite.velocity._x > 0) {\r\n      sprite.velocity._x *= -1;\r\n    }\r\n  }\r\n  // If below, move down (positive)\r\n  if (sprite.position._y > target.position._y) {\r\n    if (sprite.velocity._y < 0) {\r\n      sprite.velocity._y *= -1;\r\n    }\r\n  } else {\r\n    if (sprite.velocity._y > 0) {\r\n      sprite.velocity._y *= -1;\r\n    }\r\n  }\r\n}\r\n\r\nexport function spriteSearchAndDestroy(sprite) {\r\n  for (let i = 0; i < sprites.length; i++) {\r\n    const otherSprite = sprites[i];\r\n    if (otherSprite !== sprite) {\r\n      const spriteSight = {\r\n        x: sprite.x + sprite.width / 2,\r\n        y: sprite.y + sprite.height / 2,\r\n        height: sprite.sight * 2 - otherSprite.stealth,\r\n        width: sprite.sight * 2 - otherSprite.stealth\r\n      };\r\n      //If Seen\r\n      if (isCollide(spriteSight, otherSprite)) {\r\n        //If otherSprite weaker\r\n        if (\r\n          (sprite.health > otherSprite.health &&\r\n            sprite.damage > otherSprite.defence &&\r\n            sprite.hunger < sprite.totalHunger * 0.5) ||\r\n          (sprite.isFertile && otherSprite.isFertile)\r\n        ) {\r\n          moveSpriteTowardsTarget(sprite, otherSprite);\r\n        } else {\r\n          moveSpriteAwayFromTarget(sprite, otherSprite);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function createSprite(\r\n  x,\r\n  y,\r\n  size,\r\n  speed,\r\n  fertilityRate,\r\n  totalFertilityProgress,\r\n  totalHunger,\r\n  health,\r\n  damage,\r\n  defence,\r\n  sight,\r\n  stealth\r\n) {\r\n  spriteUniqueId += 1;\r\n  let sprite = kontra.sprite({\r\n    id: spriteUniqueId,\r\n    selected: false,\r\n    interval: null,\r\n    x: x, //Math.floor(Math.random() * canvasSize.x)\r\n    y: y, //Math.floor(Math.random() * canvasSize.y)\r\n    color: \"red\",\r\n    width: size, //25\r\n    height: size, //25\r\n    ttl: Infinity,\r\n    speed: speed,\r\n    dx: Math.random() * speed - 2,\r\n    dy: Math.random() * speed - 2,\r\n    isFertile: false,\r\n    fertilityRate: fertilityRate, //1\r\n    fertilityProgress: 0, // 1000\r\n    totalFertilityProgress: totalFertilityProgress, // 1000\r\n    hunger: totalHunger, //1000\r\n    totalHunger: totalHunger, //1000\r\n    health: health, //1000\r\n    totalHealth: health, //1000\r\n    damage: damage, //1\r\n    defence: defence, //0\r\n    sight: sight,\r\n    stealth: stealth,\r\n    diseased: { diseased: false, damage: 0 },\r\n    isColliding: false,\r\n    onUp: function() {\r\n      handleSpriteOnClick(this);\r\n    }\r\n  });\r\n  sprites.push(sprite);\r\n  kontra.pointer.track(sprite);\r\n}\r\n\r\nexport function createSprites() {\r\n  const canvasSize = { x: 800, y: 600 };\r\n  for (let i = 0; i < amountToSpawn; i++) {\r\n    createSprite(\r\n      getRandomInt(1, canvasSize.x - 1),\r\n      getRandomInt(1, canvasSize.y - 1),\r\n      gSize,\r\n      gSpeed,\r\n      gFertilityRate,\r\n      gFertilityProgress,\r\n      gTotalHunger,\r\n      gHealth,\r\n      gDamage,\r\n      gDefence,\r\n      gSight,\r\n      gStealth\r\n    );\r\n  }\r\n}\r\n\r\nexport function breed(spriteA, spriteB) {\r\n  let sprite = {};\r\n  if (getRandomInt(1, 2) === 1) {\r\n    sprite = Object.assign({}, spriteA);\r\n  } else {\r\n    sprite = Object.assign({}, spriteB);\r\n  }\r\n  sprite.size = getRandomInt(1, 2) === 1 ? spriteA.width : spriteB.width;\r\n  sprite.speed = getRandomInt(1, 2) === 1 ? spriteA.speed : spriteB.speed;\r\n  sprite.fertilityRate =\r\n    getRandomInt(1, 2) === 1 ? spriteA.fertilityRate : spriteB.fertilityRate;\r\n  sprite.totalFertilityProgress =\r\n    getRandomInt(1, 2) === 1\r\n      ? spriteA.totalFertilityProgress\r\n      : spriteB.totalFertilityProgress;\r\n  sprite.totalHunger =\r\n    getRandomInt(1, 2) === 1 ? spriteA.totalHunger : spriteB.totalHunger;\r\n  sprite.totalHealth =\r\n    getRandomInt(1, 2) === 1 ? spriteA.totalHealth : spriteB.totalHealth;\r\n  sprite.damage = getRandomInt(1, 2) === 1 ? spriteA.damage : spriteB.damage;\r\n  sprite.defence = getRandomInt(1, 2) === 1 ? spriteA.defence : spriteB.defence;\r\n  sprite.sight = getRandomInt(1, 2) === 1 ? spriteA.sight : spriteB.sight;\r\n  sprite.stealth = getRandomInt(1, 2) === 1 ? spriteA.stealth : spriteB.stealth;\r\n  //TODO: Add colour that changes slightly from the parents\r\n  const randomMutation = getRandomInt(1, 10);\r\n  if (randomMutation === 1) {\r\n    if (getRandomInt(1, 2) === 1) {\r\n      sprite.size += 5;\r\n    } else {\r\n      if (sprite.size > 5) {\r\n        sprite.size -= 5;\r\n      }\r\n    }\r\n  } else if (randomMutation === 2) {\r\n    if (getRandomInt(1, 2) === 1) {\r\n      sprite.speed += 1;\r\n    } else {\r\n      if (sprite.speed >= 1) {\r\n        sprite.speed -= 1;\r\n      }\r\n    }\r\n  } else if (randomMutation === 3) {\r\n    if (getRandomInt(1, 2) === 1) {\r\n      sprite.fertilityRate += 1;\r\n    } else {\r\n      if (sprite.fertilityRate >= 1) {\r\n        sprite.fertilityRate -= 1;\r\n      }\r\n    }\r\n  } else if (randomMutation === 4) {\r\n    if (getRandomInt(1, 2) === 1) {\r\n      sprite.totalHunger += 100;\r\n    } else {\r\n      if (sprite.totalHunger > 100) {\r\n        sprite.totalHunger -= 100;\r\n      }\r\n    }\r\n  } else if (randomMutation === 5) {\r\n    if (getRandomInt(1, 2) === 1) {\r\n      sprite.totalHealth += 10;\r\n    } else {\r\n      if (sprite.totalHealth >= 10) {\r\n        sprite.totalHealth -= 10;\r\n      }\r\n    }\r\n  } else if (randomMutation === 6) {\r\n    if (getRandomInt(1, 2) === 1) {\r\n      sprite.damage += 1;\r\n    } else {\r\n      if (sprite.damage >= 1) {\r\n        sprite.damage -= 1;\r\n      }\r\n    }\r\n  } else if (randomMutation === 7) {\r\n    if (getRandomInt(1, 2) === 1) {\r\n      sprite.defence += 1;\r\n    } else {\r\n      if (sprite.defence >= 1) {\r\n        sprite.defence -= 1;\r\n      }\r\n    }\r\n  } else if (randomMutation === 8) {\r\n    if (getRandomInt(1, 2) === 1) {\r\n      sprite.totalFertilityProgress += 10;\r\n    } else {\r\n      if (sprite.totalFertilityProgress >= 10) {\r\n        sprite.totalFertilityProgress -= 10;\r\n      }\r\n    }\r\n  } else if (randomMutation === 9) {\r\n    if (getRandomInt(1, 2) === 1) {\r\n      sprite.sight += 1;\r\n    } else {\r\n      if (sprite.sight > 0) {\r\n        sprite.sight -= 1;\r\n      }\r\n    }\r\n  } else if (randomMutation === 10) {\r\n    if (getRandomInt(1, 2) === 1) {\r\n      sprite.stealth += 1;\r\n    } else {\r\n      if (sprite.stealth > 0) {\r\n        sprite.stealth -= 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  createSprite(\r\n    sprite.position._x,\r\n    sprite.position._y,\r\n    sprite.size,\r\n    sprite.speed,\r\n    sprite.fertilityRate,\r\n    sprite.totalFertilityProgress,\r\n    sprite.totalHunger,\r\n    sprite.totalHealth,\r\n    sprite.damage,\r\n    sprite.defence,\r\n    sprite.sight,\r\n    sprite.stealth\r\n  );\r\n  spriteA.isFertile = false;\r\n  spriteB.isFertile = false;\r\n}\r\n\r\nexport function feed(spriteA, spriteB) {\r\n  if (spriteA.health > 0) {\r\n    if (spriteA.defence < spriteB.damage) {\r\n      spriteA.health -= spriteB.damage - spriteA.defence;\r\n    }\r\n  }\r\n  if (spriteA.hunger < spriteA.totalHunger - 10) {\r\n    spriteA.hunger += 10;\r\n  }\r\n  if (spriteB.health > 0) {\r\n    if (spriteB.defence < spriteA.damage) {\r\n      spriteB.health -= spriteA.damage - spriteB.defence;\r\n    }\r\n  }\r\n  if (spriteB.hunger < spriteB.totalHunger) {\r\n    spriteB.hunger += 1;\r\n  }\r\n}\r\n\r\nwindow.infinityGauntlet = function() {\r\n  let numberOfSpitesToCull = Math.round(sprites.length / 2);\r\n  for (let i = 0; i < numberOfSpitesToCull; i++) {\r\n    if (sprites[i].interval) {\r\n      clearSelectedSpriteAndInterval(sprites[i]);\r\n    }\r\n    sprites[i].ttl = 0;\r\n  }\r\n};\r\n\r\nwindow.starve = function() {\r\n  for (let i = 0; i < sprites.length - 1; i++) {\r\n    sprites[i].hunger = 0;\r\n  }\r\n};\r\n","import { restartTimer, pause } from \"./time\";\r\nimport { setError, changeEventHandler } from \"./utils\";\r\nimport {\r\n  collisionDetection,\r\n  spriteCanvasBoundaryChecker,\r\n  spritePropsChecker,\r\n  spriteSearchAndDestroy,\r\n  createSprites\r\n} from \"./spriteMethods\";\r\nimport { clearSelectedSpriteAndInterval } from \"./spriteSelector\";\r\n\r\n// Globals\r\nconst errorText = document.getElementById(\"errorText\");\r\nconst sim = document.getElementById(\"sim\");\r\nconst form = document.getElementById(\"form\");\r\nwindow.amountToSpawn = 10;\r\nwindow.gSize = 25;\r\nwindow.gSpeed = 4;\r\nwindow.gFertilityRate = 1;\r\nwindow.gFertilityProgress = 1000;\r\nwindow.gTotalHunger = 2000;\r\nwindow.gHealth = 2000;\r\nwindow.gDamage = 10;\r\nwindow.gDefence = 5;\r\nwindow.gSight = 25;\r\nwindow.gStealth = 0;\r\n\r\ndocument.getElementById(\"amount\").value = amountToSpawn;\r\ndocument.getElementById(\"size\").value = gSize;\r\ndocument.getElementById(\"speed\").value = gSpeed;\r\ndocument.getElementById(\"fertilityRate\").value = gFertilityRate;\r\ndocument.getElementById(\"fertilityProgress\").value = gFertilityProgress;\r\ndocument.getElementById(\"totalHunger\").value = gTotalHunger;\r\ndocument.getElementById(\"health\").value = gHealth;\r\ndocument.getElementById(\"damage\").value = gDamage;\r\ndocument.getElementById(\"defence\").value = gDefence;\r\ndocument.getElementById(\"sight\").value = gSight;\r\ndocument.getElementById(\"stealth\").value = gStealth;\r\n\r\ndocument.addEventListener(\r\n  \"DOMContentLoaded\",\r\n  function() {\r\n    document.querySelector('input[id=\"amount\"]').onchange = changeEventHandler;\r\n    document.querySelector('input[id=\"size\"]').onchange = changeEventHandler;\r\n    document.querySelector('input[id=\"speed\"]').onchange = changeEventHandler;\r\n    document.querySelector(\r\n      'input[id=\"fertilityRate\"]'\r\n    ).onchange = changeEventHandler;\r\n    document.querySelector(\r\n      'input[id=\"fertilityProgress\"]'\r\n    ).onchange = changeEventHandler;\r\n    document.querySelector(\r\n      'input[id=\"totalHunger\"]'\r\n    ).onchange = changeEventHandler;\r\n    document.querySelector('input[id=\"health\"]').onchange = changeEventHandler;\r\n    document.querySelector('input[id=\"damage\"]').onchange = changeEventHandler;\r\n    document.querySelector('input[id=\"defence\"]').onchange = changeEventHandler;\r\n    document.querySelector('input[id=\"sight\"]').onchange = changeEventHandler;\r\n    document.querySelector('input[id=\"stealth\"]').onchange = changeEventHandler;\r\n  },\r\n  false\r\n);\r\n\r\nwindow.startGame = function() {\r\n  form.setAttribute(\"style\", \"display:none;\");\r\n  sim.removeAttribute(\"style\");\r\n  kontra.init();\r\n\r\n  window.sprites = [];\r\n  const spriteCount = document.getElementById(\"spriteCount\");\r\n  window.restart = function() {\r\n    sprites.forEach(sprite => {\r\n      clearSelectedSpriteAndInterval(sprite);\r\n    });\r\n    if (!loop.isStopped) {\r\n      loop.stop();\r\n    }\r\n    sprites = [];\r\n    errorText.setAttribute(\"style\", \"display:none;\");\r\n    isTimerPaused = false;\r\n    createSprites();\r\n    restartTimer();\r\n    loop.start();\r\n  };\r\n\r\n  window.loop = kontra.gameLoop({\r\n    update() {\r\n      sprites.map(sprite => {\r\n        sprite.update();\r\n        spriteCanvasBoundaryChecker(sprite);\r\n        spritePropsChecker(sprite);\r\n        if (sprite.sight > 0) {\r\n          spriteSearchAndDestroy(sprite);\r\n        }\r\n      });\r\n\r\n      sprites.forEach((sprite, i) => {\r\n        sprite.isColliding = false;\r\n      });\r\n\r\n      collisionDetection();\r\n\r\n      sprites = sprites.filter(sprite => sprite.isAlive());\r\n\r\n      // Colour isColliding checker\r\n      // sprites.forEach((sprite, i) =>\r\n      //   sprite.isColliding ? (sprite.color = \"green\") : (sprite.color = \"red\")\r\n      // );\r\n\r\n      spriteCount.innerHTML = sprites.length;\r\n\r\n      if (sprites.length >= 400) {\r\n        pause();\r\n        setError(\"Exponential growth detected... Sim over; please restart.\");\r\n      } else if (sprites.length <= 0) {\r\n        pause();\r\n        setError(\"All sprites are dead... Sim over; please restart.\");\r\n      }\r\n    },\r\n    render() {\r\n      sprites.map(sprite => sprite.render());\r\n    }\r\n  });\r\n};\r\n\r\nwindow.stopGame = function() {\r\n  sprites.forEach(sprite => {\r\n    clearSelectedSpriteAndInterval(sprite);\r\n  });\r\n  isTimerPaused = false;\r\n  restartTimer();\r\n  sprites = [];\r\n  errorText.setAttribute(\"style\", \"display:none;\");\r\n  sim.setAttribute(\"style\", \"display:none;\");\r\n  form.removeAttribute(\"style\");\r\n};\r\n"],"sourceRoot":""}